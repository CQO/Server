// Generated by CoffeeScript 1.10.0
(function() {
  var MongoClient, _, fs, lineReader, moment, path, program, wait;

  _ = require('underscore');

  fs = require('fs');

  lineReader = require('line-reader');

  moment = require('moment');

  path = require('path');

  program = require('commander');

  wait = require('wait.for');

  MongoClient = require('mongodb').MongoClient;

  program.usage('[options]').option('-v, --verbose', 'Verbose', (function(v, total) {
    return total + 1;
  }), 0).option('-M, --mongo-db [mongo db]', 'Mongo DB', 'localhost:27017').option('-N, --db-name [db name]', 'DB Name', 'meteor').on('--help', function() {
    console.log('  Example:');
    console.log('');
    console.log('    $ coffee unsubscribe.coffee');
    return console.log('');
  }).parse(process.argv);

  wait.launchFiber(function() {
    var User, db;
    db = wait.forMethod(MongoClient, 'connect', "mongodb://" + program.mongoDb + "/" + program.dbName, {
      replSet: {
        socketOptions: {
          connectTimeoutMS: 300000
        }
      }
    });
    User = db.collection('users');
    return lineReader.eachLine('./unsubscribe.csv', function(line, last) {
      var row;
      row = line.split(',');
      if (program.verbose) {
        console.log(row[0]);
      }
      return wait.launchFiber(function() {
        var updated;
        updated = wait.forMethod(User, 'update', {
          "emails.address": row[0]
        }, {
          $set: {
            "mailer.unsubscribed": true
          }
        });
        if (last) {
          return process.exit();
        }
      });
    });
  });

}).call(this);
