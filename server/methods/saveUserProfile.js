// Generated by CoffeeScript 1.10.0
(function() {
  Meteor.methods({
    saveUserProfile: function(settings) {
      var checkPassword, profile, user;
      check(settings, Object);
      if (!RocketChat.settings.get("Accounts_AllowUserProfileChange")) {
        throw new Meteor.Error('error-not-allowed', 'Not allowed', {
          method: 'saveUserProfile'
        });
      }
      if (!Meteor.userId()) {
        throw new Meteor.Error('error-invalid-user', 'Invalid user', {
          method: 'saveUserProfile'
        });
      }
      user = RocketChat.models.Users.findOneById(Meteor.userId());
      checkPassword = function(user, currentPassword) {
        var passCheck, ref, ref1;
        if (!s.trim(user != null ? (ref = user.services) != null ? (ref1 = ref.password) != null ? ref1.bcrypt : void 0 : void 0 : void 0)) {
          return true;
        }
        if (!currentPassword) {
          return false;
        }
        passCheck = Accounts._checkPassword(user, {
          digest: currentPassword,
          algorithm: 'sha-256'
        });
        if (passCheck.error) {
          return false;
        }
        return true;
      };
      if (settings.newPassword != null) {
        if (!checkPassword(user, settings.currentPassword)) {
          throw new Meteor.Error('error-invalid-password', 'Invalid password', {
            method: 'saveUserProfile'
          });
        }
        Accounts.setPassword(Meteor.userId(), settings.newPassword, {
          logout: false
        });
      }
      if (settings.realname != null) {
        Meteor.call('setRealName', settings.realname);
      }
      if (settings.username != null) {
        Meteor.call('setUsername', settings.username);
      }
      if (settings.email != null) {
        if (!checkPassword(user, settings.currentPassword)) {
          throw new Meteor.Error('error-invalid-password', 'Invalid password', {
            method: 'saveUserProfile'
          });
        }
        Meteor.call('setEmail', settings.email);
      }
      profile = {};
      RocketChat.models.Users.setProfile(Meteor.userId(), profile);
      return true;
    }
  });

}).call(this);
