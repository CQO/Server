// Generated by CoffeeScript 1.10.0
(function() {
  RocketChat.Migrations.add({
    version: 19,
    up: function() {

      /*
      		 * Migrate existing admin users to Role based admin functionality
      		 * 'admin' role applies to global scope
       */
      var admins, rooms, usernames, users;
      admins = Meteor.users.find({
        admin: true
      }, {
        fields: {
          _id: 1,
          username: 1
        }
      }).fetch();
      RocketChat.authz.addUsersToRoles(_.pluck(admins, '_id'), ['admin']);
      Meteor.users.update({}, {
        $unset: {
          admin: ''
        }
      }, {
        multi: true
      });
      usernames = _.pluck(admins, 'username').join(', ');
      console.log(("Migrate " + usernames + " from admin field to 'admin' role").green);
      users = Meteor.users.find().fetch();
      RocketChat.authz.addUsersToRoles(_.pluck(users, '_id'), ['user']);
      usernames = _.pluck(users, 'username').join(', ');
      console.log(("Add " + usernames + " to 'user' role").green);
      rooms = RocketChat.models.Rooms.findByTypes(['c', 'p']).fetch();
      return _.each(rooms, function(room) {
        var creator, ref;
        creator = room != null ? (ref = room.u) != null ? ref._id : void 0 : void 0;
        if (creator) {
          if (Meteor.users.findOne({
            _id: creator
          })) {
            return RocketChat.authz.addUsersToRoles(creator, ['moderator'], room._id);
          } else {
            RocketChat.models.Subscriptions.removeByRoomId(room._id);
            RocketChat.models.Messages.removeByRoomId(room._id);
            return RocketChat.models.Rooms.removeById(room._id);
          }
        }
      });
    }
  });

}).call(this);
