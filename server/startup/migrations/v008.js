// Generated by CoffeeScript 1.10.0
(function() {
  RocketChat.Migrations.add({
    version: 8,
    up: function() {
      var ref, ref1, ref2, ref3, ref4, settings;
      console.log('Load old settings record');
      settings = RocketChat.models.Settings.findOne({
        _id: 'settings'
      });
      if (settings) {
        if (settings.CDN_PREFIX != null) {
          RocketChat.models.Settings.insert({
            _id: 'CDN_PREFIX',
            value: settings.CDN_PREFIX,
            type: 'string',
            group: 'General'
          });
        }
        if (((ref = settings.ENV) != null ? ref.MAIL_URL : void 0) != null) {
          RocketChat.models.Settings.insert({
            _id: 'MAIL_URL',
            value: settings.ENV.MAIL_URL,
            type: 'string',
            group: 'SMTP'
          });
        }
        if (settings.denyUnverifiedEmails != null) {
          RocketChat.models.Settings.insert({
            _id: 'Accounts_denyUnverifiedEmails',
            value: settings.denyUnverifiedEmails,
            type: 'boolean',
            group: 'Accounts'
          });
        }
        if (((ref1 = settings["public"]) != null ? (ref2 = ref1.avatarStore) != null ? ref2.type : void 0 : void 0) != null) {
          RocketChat.models.Settings.insert({
            _id: 'avatarStore_type',
            value: settings["public"].avatarStore.type,
            type: 'string',
            group: 'API'
          });
        }
        if (((ref3 = settings["public"]) != null ? (ref4 = ref3.avatarStore) != null ? ref4.path : void 0 : void 0) != null) {
          RocketChat.models.Settings.insert({
            _id: 'avatarStore_path',
            value: settings["public"].avatarStore.path,
            type: 'string',
            group: 'API'
          });
        }
        return RocketChat.models.Settings.remove({
          _id: 'settings'
        });
      }
    }
  });

}).call(this);
