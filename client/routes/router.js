// Generated by CoffeeScript 1.10.0
(function() {
  Blaze.registerHelper('pathFor', function(path, kw) {
    return FlowRouter.path(path, kw.hash);
  });

  BlazeLayout.setRoot('body');

  FlowRouter.subscriptions = function() {
    return Tracker.autorun((function(_this) {
      return function() {
        if (Meteor.userId()) {
          _this.register('userData', Meteor.subscribe('userData'));
          return _this.register('activeUsers', Meteor.subscribe('activeUsers'));
        }
      };
    })(this));
  };

  FlowRouter.route('/', {
    name: 'index',
    action: function() {
      BlazeLayout.render('main', {
        center: 'loading'
      });
      if (!Meteor.userId()) {
        return FlowRouter.go('home');
      }
      return Tracker.autorun(function(c) {
        if (FlowRouter.subsReady() === true) {
          Meteor.defer(function() {
            var room;
            if (Meteor.user().defaultRoom != null) {
              room = Meteor.user().defaultRoom.split('/');
              return FlowRouter.go(room[0], {
                name: room[1]
              });
            } else {
              return FlowRouter.go('home');
            }
          });
          return c.stop();
        }
      });
    }
  });

  FlowRouter.route('/login', {
    name: 'login',
    action: function() {
      return FlowRouter.go('home');
    }
  });

  FlowRouter.route('/home', {
    name: 'home',
    action: function() {
      RocketChat.TabBar.showGroup('home');
      BlazeLayout.render('main', {
        center: 'home'
      });
      return KonchatNotification.getDesktopPermission();
    }
  });

  FlowRouter.route('/changeavatar', {
    name: 'changeAvatar',
    action: function() {
      RocketChat.TabBar.showGroup('changeavatar');
      return BlazeLayout.render('main', {
        center: 'avatarPrompt'
      });
    }
  });

  FlowRouter.route('/account/:group?', {
    name: 'account',
    action: function(params) {
      if (!params.group) {
        params.group = 'Preferences';
      }
      params.group = _.capitalize(params.group, true);
      RocketChat.TabBar.showGroup('account');
      return BlazeLayout.render('main', {
        center: "account" + params.group
      });
    }
  });

  FlowRouter.route('/history/private', {
    name: 'privateHistory',
    subscriptions: function(params, queryParams) {
      return this.register('privateHistory', Meteor.subscribe('privateHistory'));
    },
    action: function() {
      Session.setDefault('historyFilter', '');
      RocketChat.TabBar.showGroup('private-history');
      return BlazeLayout.render('main', {
        center: 'privateHistory'
      });
    }
  });

  FlowRouter.route('/terms-of-service', {
    name: 'terms-of-service',
    action: function() {
      Session.set('cmsPage', 'Layout_Terms_of_Service');
      return BlazeLayout.render('cmsPage');
    }
  });

  FlowRouter.route('/privacy-policy', {
    name: 'privacy-policy',
    action: function() {
      Session.set('cmsPage', 'Layout_Privacy_Policy');
      return BlazeLayout.render('cmsPage');
    }
  });

  FlowRouter.route('/room-not-found/:type/:name', {
    name: 'room-not-found',
    action: function(params) {
      Session.set('roomNotFound', {
        type: params.type,
        name: params.name
      });
      return BlazeLayout.render('main', {
        center: 'roomNotFound'
      });
    }
  });

  FlowRouter.route('/fxos', {
    name: 'firefox-os-install',
    action: function() {
      return BlazeLayout.render('fxOsInstallPrompt');
    }
  });

  FlowRouter.route('/register/:hash', {
    name: 'register-secret-url',
    action: function(params) {
      return BlazeLayout.render('secretURL');
    }
  });

}).call(this);
